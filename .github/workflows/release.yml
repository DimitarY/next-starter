name: Release

on:
  release:
    types: [released]

jobs:
  build-and-push-image:
    name: "Build and push image"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get release info
        run: |
          RELEASE_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")

          LATEST_RELEASE_TAG_NAME=$(echo "$RELEASE_JSON" | jq -r '.tag_name')

          echo "Latest release name: $LATEST_RELEASE_TAG_NAME"
          echo "LATEST_RELEASE_TAG_NAME=$LATEST_RELEASE_TAG_NAME" >> $GITHUB_ENV

      - name: "Build Image"
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ vars.CONTAINER_IMAGE_NAME }}
          tags: |
            ${{ github.event.release.tag_name }}
            ${{ env.LATEST_RELEASE_TAG_NAME == github.event.release.tag_name && 'latest' || '' }}
          build-args: |
            NEXT_PUBLIC_BASE_URL=${{ vars.NEXT_PUBLIC_BASE_URL }}
          containerfiles: ./Containerfile

      - name: Push To Registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ vars.CONTAINER_REGISTRY }}
          username: ${{ vars.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
